unit uPSI_Datos;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;

type 
(*----------------------------------------------------------------------------*)
  TPSImport_Datos = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TDatos(CL: TPSPascalCompiler);
procedure SIRegister_Datos(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TDatos(CL: TPSRuntimeClassImporter);
procedure RIRegister_Datos(CL: TPSRuntimeClassImporter);

implementation


uses
   DB
  ,IBCustomDataSet
  ,IBQuery
  ,Controls
  ,Script_Datos
  ;


(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TDatos(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TDataModule', 'TDatos') do
  with CL.AddClassN(CL.FindClass('TDataModule'),'TDatos') do
  begin
    RegisterMethod('Function Mensaje : TMensaje');
    RegisterMethod('Function AmbienteIntradia : TAmbienteIntradia');
    RegisterMethod('Function BandaAlta : currency');
    RegisterMethod('Function BandaBaja : currency');
    RegisterMethod('Function Cierre : currency');
    RegisterMethod('Function Apertura : currency');
    RegisterMethod('Function Volumen : integer');
    RegisterMethod('Function CambioAlzaDoble : currency');
    RegisterMethod('Function CambioAlzaSimple : currency');
    RegisterMethod('Function CambioBajaDoble : currency');
    RegisterMethod('Function CambioBajaSimple : currency');
    RegisterMethod('Function Correlacion : integer');
    RegisterMethod('Function DiasSeguidosNum : integer');
    RegisterMethod('Function DiasSeguidosPerCent : single');
    RegisterMethod('Function DimensionFractal : currency');
    RegisterMethod('Function Dinero : currency');
    RegisterMethod('Function DineroAlzaDoble : currency');
    RegisterMethod('Function DineroAlzaSimple : currency');
    RegisterMethod('Function DineroBajaDoble : currency');
    RegisterMethod('Function DineroBajaSimple : currency');
    RegisterMethod('Function Dobson10 : integer');
    RegisterMethod('Function Dobson100 : integer');
    RegisterMethod('Function Dobson130 : integer');
    RegisterMethod('Function Dobson40 : integer');
    RegisterMethod('Function Dobson70 : integer');
    RegisterMethod('Function DobsonAlto10 : integer');
    RegisterMethod('Function DobsonAlto100 : integer');
    RegisterMethod('Function DobsonAlto130 : integer');
    RegisterMethod('Function DobsonAlto40 : integer');
    RegisterMethod('Function DobsonAlto70 : integer');
    RegisterMethod('Function DobsonBajo10 : integer');
    RegisterMethod('Function DobsonBajo100 : integer');
    RegisterMethod('Function DobsonBajo130 : integer');
    RegisterMethod('Function DobsonBajo40 : integer');
    RegisterMethod('Function DobsonBajo70 : integer');
    RegisterMethod('Function Maximo : currency');
    RegisterMethod('Function MaximoPrevisto : currency');
    RegisterMethod('Function MaximoPrevistoAprox : single');
    RegisterMethod('Function MaximoSePrevino : currency');
    RegisterMethod('Function Media200 : currency');
    RegisterMethod('Function Minimo : currency');
    RegisterMethod('Function MinimoPrevisto : currency');
    RegisterMethod('Function MinimoPrevistoAprox : single');
    RegisterMethod('Function MinimoSePrevino : currency');
    RegisterMethod('Function DobsonNivelActual : integer');
    RegisterMethod('Function DobsonNivelBaja : integer');
    RegisterMethod('Function DobsonNivelSube : integer');
    RegisterMethod('Function IDCotizacion : integer');
    RegisterMethod('Function Papel : currency');
    RegisterMethod('Function PapelAlzaDoble : currency');
    RegisterMethod('Function PapelAlzaSimple : currency');
    RegisterMethod('Function PapelBajaDoble : currency');
    RegisterMethod('Function PapelBajaSimple : currency');
    RegisterMethod('Function PercentAlzaSimple : currency');
    RegisterMethod('Function PercentBajaSimple : currency');
    RegisterMethod('Function PivotPoint : currency');
    RegisterMethod('Function PivotPointR1 : currency');
    RegisterMethod('Function PivotPointR2 : currency');
    RegisterMethod('Function PivotPointR3 : currency');
    RegisterMethod('Function PivotPointS1 : currency');
    RegisterMethod('Function PivotPointS2 : currency');
    RegisterMethod('Function PivotPointS3 : currency');
    RegisterMethod('Function PotencialFractal : integer');
    RegisterMethod('Function RentabilidadAbierta : single');
    RegisterMethod('Function Rsi14 : integer');
    RegisterMethod('Function Rsi140 : integer');
    RegisterMethod('Function Stop : currency');
    RegisterMethod('Function Posicionado : currency');
    RegisterMethod('Function Variabilidad : single');
    RegisterMethod('Function Variacion : single');
    RegisterMethod('Function Volatilidad : single');
    RegisterMethod('Function Zona : TZona');
    RegisterMethod('Function ZonaAlzaDoble : TZona');
    RegisterMethod('Function ZonaAlzaSimple : TZona');
    RegisterMethod('Function ZonaBajaDoble : TZona');
    RegisterMethod('Function ZonaBajaSimple : TZona');
    RegisterMethod('Function Riesgo : Single');
    RegisterMethod('Function PresionVertical : Single');
    RegisterMethod('Function PresionVerticalAlzaSimple : Single');
    RegisterMethod('Function PresionVerticalAlzaDoble : Single');
    RegisterMethod('Function PresionVerticalBajaSimple : Single');
    RegisterMethod('Function PresionVerticalBajaDoble : Single');
    RegisterMethod('Function PresionLateral : Single');
    RegisterMethod('Function PresionLateralAlzaSimple : Single');
    RegisterMethod('Function PresionLateralAlzaDoble : Single');
    RegisterMethod('Function PresionLateralBajaSimple : Single');
    RegisterMethod('Function PresionLateralBajaDoble : Single');
    RegisterProperty('IDValor', 'integer', iptrw);
    RegisterProperty('IDSesion', 'integer', iptrw);
    RegisterProperty('TipoSesion', 'TTipoSesion', iptrw);
    RegisterProperty('SesionNum', 'TDatos integer', iptrw);
    SetDefaultPropery('SesionNum');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_Datos(CL: TPSPascalCompiler);
begin
  CL.AddClassN(CL.FindClass('TOBJECT'),'EDatosNotFound');
  CL.AddTypeS('TZona', '( zSinZona, zAMenos, zAMas, zABMenos, zABMas, zBMenos, '
   +'zBMas, zOMenos, zOMas )');
  CL.AddTypeS('TAmbienteIntradia', '( aiSinAmbiente, aiAlcistaContradiccionesSo'
   +'spechosas, aiContinuidadPlana, aiRetrocesoTecnico, aiReboteTecnico, aiLige'
   +'raPresionAlcista, aiBajadaMenorEsperada, aiPresionAlcista, aiDebilidadOrie'
   +'ntadaBaja, aiPresionBajista, aiAlzaEnganosa, aiDebilidadOrientadaAlza, aiB'
   +'ajaEnganosa, aiPresionAlcistaCreciente, aiPresionAlcistaLatenteContenida, '
   +'aiBajaSubirMas, aiDecididamenteAlcista, aiIndecisionBandazosAlzaBaja, aiVo'
   +'latilidadInclinadaBaja, aiVolatilidadOrientadaAlza, aiContinuidadCiertaOri'
   +'entacionBajista, aiPresionBajistaAumento, aiAlzaPresionBajistaLatente, aiI'
   +'ndefinicionMaxima, aiOrientacionBajistaContradicciones, aiIndefinicionDeca'
   +'ntadaAlza, aiRepeticionPerspectivasBajistas, aiOrientacionClaramenteBajist'
   +'a )');
  CL.AddTypeS('TTipoSesion', '( tsDiaria, tsSemanal )');
  SIRegister_TDatos(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TDatosSesionNum_R(Self: TDatos; var T: TDatos; const t1: Integer);
begin T := Self.SesionNum[t1]; end;

(*----------------------------------------------------------------------------*)
procedure TDatosTipoSesion_W(Self: TDatos; const T: TTipoSesion);
begin Self.TipoSesion := T; end;

(*----------------------------------------------------------------------------*)
procedure TDatosTipoSesion_R(Self: TDatos; var T: TTipoSesion);
begin T := Self.TipoSesion; end;

(*----------------------------------------------------------------------------*)
procedure TDatosIDSesion_W(Self: TDatos; const T: integer);
begin Self.IDSesion := T; end;

(*----------------------------------------------------------------------------*)
procedure TDatosIDSesion_R(Self: TDatos; var T: integer);
begin T := Self.IDSesion; end;

(*----------------------------------------------------------------------------*)
procedure TDatosIDValor_W(Self: TDatos; const T: integer);
begin Self.IDValor := T; end;

(*----------------------------------------------------------------------------*)
procedure TDatosIDValor_R(Self: TDatos; var T: integer);
begin T := Self.IDValor; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TDatos(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TDatos) do
  begin
    RegisterMethod(@TDatos.Mensaje, 'Mensaje');
    RegisterMethod(@TDatos.AmbienteIntradia, 'AmbienteIntradia');
    RegisterMethod(@TDatos.BandaAlta, 'BandaAlta');
    RegisterMethod(@TDatos.BandaBaja, 'BandaBaja');
    RegisterMethod(@TDatos.Cierre, 'Cierre');
    RegisterMethod(@TDatos.Apertura, 'Apertura');
    RegisterMethod(@TDatos.Volumen, 'Volumen');
    RegisterMethod(@TDatos.CambioAlzaDoble, 'CambioAlzaDoble');
    RegisterMethod(@TDatos.CambioAlzaSimple, 'CambioAlzaSimple');
    RegisterMethod(@TDatos.CambioBajaDoble, 'CambioBajaDoble');
    RegisterMethod(@TDatos.CambioBajaSimple, 'CambioBajaSimple');
    RegisterMethod(@TDatos.Correlacion, 'Correlacion');
    RegisterMethod(@TDatos.DiasSeguidosNum, 'DiasSeguidosNum');
    RegisterMethod(@TDatos.DiasSeguidosPerCent, 'DiasSeguidosPerCent');
    RegisterMethod(@TDatos.DimensionFractal, 'DimensionFractal');
    RegisterMethod(@TDatos.Dinero, 'Dinero');
    RegisterMethod(@TDatos.DineroAlzaDoble, 'DineroAlzaDoble');
    RegisterMethod(@TDatos.DineroAlzaSimple, 'DineroAlzaSimple');
    RegisterMethod(@TDatos.DineroBajaDoble, 'DineroBajaDoble');
    RegisterMethod(@TDatos.DineroBajaSimple, 'DineroBajaSimple');
    RegisterMethod(@TDatos.Dobson10, 'Dobson10');
    RegisterMethod(@TDatos.Dobson100, 'Dobson100');
    RegisterMethod(@TDatos.Dobson130, 'Dobson130');
    RegisterMethod(@TDatos.Dobson40, 'Dobson40');
    RegisterMethod(@TDatos.Dobson70, 'Dobson70');
    RegisterMethod(@TDatos.DobsonAlto10, 'DobsonAlto10');
    RegisterMethod(@TDatos.DobsonAlto100, 'DobsonAlto100');
    RegisterMethod(@TDatos.DobsonAlto130, 'DobsonAlto130');
    RegisterMethod(@TDatos.DobsonAlto40, 'DobsonAlto40');
    RegisterMethod(@TDatos.DobsonAlto70, 'DobsonAlto70');
    RegisterMethod(@TDatos.DobsonBajo10, 'DobsonBajo10');
    RegisterMethod(@TDatos.DobsonBajo100, 'DobsonBajo100');
    RegisterMethod(@TDatos.DobsonBajo130, 'DobsonBajo130');
    RegisterMethod(@TDatos.DobsonBajo40, 'DobsonBajo40');
    RegisterMethod(@TDatos.DobsonBajo70, 'DobsonBajo70');
    RegisterMethod(@TDatos.Maximo, 'Maximo');
    RegisterMethod(@TDatos.MaximoPrevisto, 'MaximoPrevisto');
    RegisterMethod(@TDatos.MaximoPrevistoAprox, 'MaximoPrevistoAprox');
    RegisterMethod(@TDatos.MaximoSePrevino, 'MaximoSePrevino');
    RegisterMethod(@TDatos.Media200, 'Media200');
    RegisterMethod(@TDatos.Minimo, 'Minimo');
    RegisterMethod(@TDatos.MinimoPrevisto, 'MinimoPrevisto');
    RegisterMethod(@TDatos.MinimoPrevistoAprox, 'MinimoPrevistoAprox');
    RegisterMethod(@TDatos.MinimoSePrevino, 'MinimoSePrevino');
    RegisterMethod(@TDatos.DobsonNivelActual, 'DobsonNivelActual');
    RegisterMethod(@TDatos.DobsonNivelBaja, 'DobsonNivelBaja');
    RegisterMethod(@TDatos.DobsonNivelSube, 'DobsonNivelSube');
    RegisterMethod(@TDatos.IDCotizacion, 'IDCotizacion');
    RegisterMethod(@TDatos.Papel, 'Papel');
    RegisterMethod(@TDatos.PapelAlzaDoble, 'PapelAlzaDoble');
    RegisterMethod(@TDatos.PapelAlzaSimple, 'PapelAlzaSimple');
    RegisterMethod(@TDatos.PapelBajaDoble, 'PapelBajaDoble');
    RegisterMethod(@TDatos.PapelBajaSimple, 'PapelBajaSimple');
    RegisterMethod(@TDatos.PercentAlzaSimple, 'PercentAlzaSimple');
    RegisterMethod(@TDatos.PercentBajaSimple, 'PercentBajaSimple');
    RegisterMethod(@TDatos.PivotPoint, 'PivotPoint');
    RegisterMethod(@TDatos.PivotPointR1, 'PivotPointR1');
    RegisterMethod(@TDatos.PivotPointR2, 'PivotPointR2');
    RegisterMethod(@TDatos.PivotPointR3, 'PivotPointR3');
    RegisterMethod(@TDatos.PivotPointS1, 'PivotPointS1');
    RegisterMethod(@TDatos.PivotPointS2, 'PivotPointS2');
    RegisterMethod(@TDatos.PivotPointS3, 'PivotPointS3');
    RegisterMethod(@TDatos.PotencialFractal, 'PotencialFractal');
    RegisterMethod(@TDatos.RentabilidadAbierta, 'RentabilidadAbierta');
    RegisterMethod(@TDatos.Rsi14, 'Rsi14');
    RegisterMethod(@TDatos.Rsi140, 'Rsi140');
    RegisterMethod(@TDatos.Stop, 'Stop');
    RegisterMethod(@TDatos.Posicionado, 'Posicionado');
    RegisterMethod(@TDatos.Variabilidad, 'Variabilidad');
    RegisterMethod(@TDatos.Variacion, 'Variacion');
    RegisterMethod(@TDatos.Volatilidad, 'Volatilidad');
    RegisterMethod(@TDatos.Zona, 'Zona');
    RegisterMethod(@TDatos.ZonaAlzaDoble, 'ZonaAlzaDoble');
    RegisterMethod(@TDatos.ZonaAlzaSimple, 'ZonaAlzaSimple');
    RegisterMethod(@TDatos.ZonaBajaDoble, 'ZonaBajaDoble');
    RegisterMethod(@TDatos.ZonaBajaSimple, 'ZonaBajaSimple');
    RegisterMethod(@TDatos.Riesgo, 'Riesgo');
    RegisterMethod(@TDatos.PresionVertical, 'PresionVertical');
    RegisterMethod(@TDatos.PresionVerticalAlzaSimple, 'PresionVerticalAlzaSimple');
    RegisterMethod(@TDatos.PresionVerticalAlzaDoble, 'PresionVerticalAlzaDoble');
    RegisterMethod(@TDatos.PresionVerticalBajaSimple, 'PresionVerticalBajaSimple');
    RegisterMethod(@TDatos.PresionVerticalBajaDoble, 'PresionVerticalBajaDoble');
    RegisterMethod(@TDatos.PresionLateral, 'PresionLateral');
    RegisterMethod(@TDatos.PresionLateralAlzaSimple, 'PresionLateralAlzaSimple');
    RegisterMethod(@TDatos.PresionLateralAlzaDoble, 'PresionLateralAlzaDoble');
    RegisterMethod(@TDatos.PresionLateralBajaSimple, 'PresionLateralBajaSimple');
    RegisterMethod(@TDatos.PresionLateralBajaDoble, 'PresionLateralBajaDoble');
    RegisterPropertyHelper(@TDatosIDValor_R,@TDatosIDValor_W,'IDValor');
    RegisterPropertyHelper(@TDatosIDSesion_R,@TDatosIDSesion_W,'IDSesion');
    RegisterPropertyHelper(@TDatosTipoSesion_R,@TDatosTipoSesion_W,'TipoSesion');
    RegisterPropertyHelper(@TDatosSesionNum_R,nil,'SesionNum');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_Datos(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(ESesionNotFound) do
  RIRegister_TDatos(CL);
end;

 
 
{ TPSImport_Datos }
(*----------------------------------------------------------------------------*)
procedure TPSImport_Datos.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_Datos(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_Datos.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_Datos(ri);
end;
(*----------------------------------------------------------------------------*)
 

end.
