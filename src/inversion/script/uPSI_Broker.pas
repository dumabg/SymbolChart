unit uPSI_Broker;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis.
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface

uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;

type
(*----------------------------------------------------------------------------*)
  TPSImport_Broker = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TBroker(CL: TPSPascalCompiler);
procedure SIRegister_Broker(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TBroker(CL: TPSRuntimeClassImporter);
procedure RIRegister_Broker(CL: TPSRuntimeClassImporter);

implementation


uses
   Script_Broker
  ;


(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TBroker(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TOBJECT', 'TBroker') do
  with CL.AddClassN(CL.FindClass('TOBJECT'),'TBroker') do
  begin
    RegisterMethod('Procedure AbrirPosicionMercado( puntos : integer; largos : boolean; stop : currency)');
    RegisterMethod('Procedure AbrirPosicionLimitada( puntos : integer; largos : boolean; stop, limite : currency)');
    RegisterMethod('Procedure ModificarStop( stop : currency)');
    RegisterMethod('Procedure CerrarPosicion');
    RegisterMethod('Function CambioEntrada : currency');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_Broker(CL: TPSPascalCompiler);
begin
  SIRegister_TBroker(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_TBroker(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TBroker) do
  begin
    RegisterMethod(@TBroker.AbrirPosicionMercado, 'AbrirPosicionMercado');
    RegisterMethod(@TBroker.AbrirPosicionLimitada, 'AbrirPosicionLimitada');
    RegisterMethod(@TBroker.ModificarStop, 'ModificarStop');
    RegisterMethod(@TBroker.CerrarPosicion, 'CerrarPosicion');
    RegisterMethod(@TBroker.CambioEntrada, 'CambioEntrada');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_Broker(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TBroker(CL);
end;

 
 
{ TPSImport_Broker }
(*----------------------------------------------------------------------------*)
procedure TPSImport_Broker.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_Broker(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_Broker.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_Broker(ri);
end;
(*----------------------------------------------------------------------------*)


end.
