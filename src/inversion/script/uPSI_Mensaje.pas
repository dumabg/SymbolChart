unit uPSI_Mensaje;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;

type
(*----------------------------------------------------------------------------*)
  TPSImport_Mensaje = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;

{ compile-time registration functions }
procedure SIRegister_TMensaje(CL: TPSPascalCompiler);
procedure SIRegister_Mensaje(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TMensaje(CL: TPSRuntimeClassImporter);
procedure RIRegister_Mensaje(CL: TPSRuntimeClassImporter);


implementation

uses Script_Mensaje;


(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TMensaje(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TOBJECT', 'TMensaje') do
  with CL.AddClass(CL.FindClass('TOBJECT'), TMensaje) do
  begin
    RegisterMethod('Function Es( const tipo : TTipoMensaje) : boolean');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_Mensaje(CL: TPSPascalCompiler);
begin
  CL.AddTypeS('TTipoMensaje', '( tmInicioCiclo, tmInicioCicloVirtual, tmMantene'
   +'r, tmPrimeraAdvertencia, tmPrimeraAdvertenciaVirtual, tmAdvertencia, tmRes'
   +'istenciaPura, tmFranjaResistencia, tmAreasResistencia, tmSoportePuro, tmFr'
   +'anjaSoporte, tmAreasSoporte, tmAcumulacion, tmPreparandoAcumulacion, tmDis'
   +'tribucion, tmPreparandoDistribucion, tmRemontar, tmAgregar, tmAlza, tmFals'
   +'aAlarma, tmSeguridad, tmSiempreCuando, tmSueloInminente, tmSueloBusqueda, '
   +'tmSueloProvisional, tmTechoInminente, tmTechoBusqueda, tmTechoProvisional '
   +')');
  SIRegister_TMensaje(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_TMensaje(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TMensaje) do
  begin
    RegisterMethod(@TMensaje.Es, 'Es');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_Mensaje(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TMensaje(CL);
end;

 
 
{ TPSImport_Mensaje }
(*----------------------------------------------------------------------------*)
procedure TPSImport_Mensaje.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_Mensaje(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_Mensaje.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_Mensaje(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
